version: '3.8'

services:
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    container_name: api
    restart: unless-stopped
    ports:
      - 3333:3333
    env_file:
      - ./api/.env
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
      POSTGRES_DB: observatory

  prometheus:
    build:
      context: ./infrastructure/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - type: bind
        source: ./infrastructure/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
      - type: bind
        source: ./infrastructure/prometheus/rules.yml
        target: /etc/prometheus/rules.yml
        read_only: true
    
  alertmanager:
    build:
      context: ./infrastructure/alertmanager
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - 9093:9093
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    volumes:
      - type: bind
        source: ./infrastructure/alertmanager/alertmanager.yml
        target: /etc/alertmanager/alertmanager.yml
        read_only: true
    depends_on:
      - prometheus

  grafana:
    build:
      context: ./infrastructure/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: ./infrastructure/grafana/grafana.yml
        target: /etc/grafana/provisioning/datasources/datasources.yml
        read_only: true
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: grafanapw
      GF_USERS_ALLOW_SIGN_UP: false
    depends_on:
      - prometheus

  elasticsearch:
    build:
      context: ./infrastructure/elasticsearch
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./infrastructure/elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: elasticpw
      discovery.type: single-node
  
  # logstash:
  #   build:
  #     context: ./infrastructure/logstash
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   container_name: logstash
  #   restart: unless-stopped
  #   volumes:
  #     - type: bind
  #       source: ./infrastructure/logstash/logstash.yml
  #       target: /usr/share/logstash/config/logstash.yml
  #       read_only: true
  #     - type: bind
  #       source: ./infrastructure/logstash/logstash.conf
  #       target: /usr/share/logstash/pipeline/logstash.conf
  #       read_only: true
  #   ports:
  #     - 5000:5000/tcp
  #     - 5044:5044/tcp
  #     - 5000:5000/udp
  #     - 9600:9600
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   depends_on:
  #     - elasticsearch
  
  kibana:
    hostname: kibana
    container_name: kibana
    build:
      context: ./infrastructure/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./infrastructure/kibana/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  filebeat:
    build:
      context: ./infrastructure/filebeat/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: filebeat
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /var/lib/docker
        target: /var/lib/docker
    labels:
      co.elastic.logs/enabled: "false"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - elasticsearch
      # - logstash

volumes:
  elasticsearch:
